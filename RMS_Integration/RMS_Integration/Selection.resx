<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QDERXhpZgAATU0AKgAAAAgAAwE7AAIAAAAOAAAAModpAAQAAAAB
        AAAAQJydAAEAAAAcAAAAoAAAAABNYXJpbyBTb3JpYW5vAAAEkAMAAgAAABQAAAB2kAQAAgAAABQAAACK
        kpEAAgAAAAMxNAAAkpIAAgAAAAMxNAAAAAAAADIwMTk6MDI6MDUgMTQ6Mzk6MzgAMjAxOTowMjowNSAx
        NDozOTozOAAAAE0AYQByAGkAbwAgAFMAbwByAGkAYQBuAG8AAAD/2wBDAAcFBQYFBAcGBQYIBwcIChEL
        CgkJChUPEAwRGBUaGRgVGBcbHichGx0lHRcYIi4iJSgpKywrGiAvMy8qMicqKyr/2wBDAQcICAoJChQL
        CxQqHBgcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKir/wAAR
        CAAxAJMDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIE
        AwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0
        NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWm
        p6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEB
        AQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdh
        cRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpj
        ZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK
        0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6Kvb+0063Nxf3MVtCCAZJXCrk
        +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
</value>
  </data>
</root>